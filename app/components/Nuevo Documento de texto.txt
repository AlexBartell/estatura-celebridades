'use client'

import { useEffect, useState } from 'react'
import { useParams } from 'next/navigation'
import { createClient } from '@/lib/supabase/client'

export default function VotacionEstatura({ userId }: { userId: string }) {
  const supabase  = await createClient()
  const { slug } = useParams()
  const [altura, setAltura] = useState('')
  const [mensaje, setMensaje] = useState('')
  const [loading, setLoading] = useState(false)

  const manejarVoto = async () => {
    const alturaNum = parseFloat(altura)
    if (isNaN(alturaNum) || alturaNum < 100 || alturaNum > 250) {
      setMensaje('Por favor ingresa una altura válida entre 100 y 250 cm.')
      return
    }

    setLoading(true)
    const { data: celeb } = await supabase
      .from('celebridades')
      .select('id')
      .eq('slug', slug)
      .single()

    if (!celeb) {
      setMensaje('No se encontró la celebridad.')
      setLoading(false)
      return
    }

    const { error } = await supabase.from('votos').insert({
      celebridad_id: celeb.id,
      usuario_id: userId,
      valor: alturaNum,
    })

    if (error) {
      setMensaje('Error al guardar tu voto. Puede que ya hayas votado.')
    } else {
      setMensaje('¡Voto registrado! Gracias por participar.')
    }
    setLoading(false)
  }

  return (
    <div className="mt-6 space-y-2">
      <h3 className="text-lg font-semibold">¿Cuánto crees que mide esta celebridad?</h3>
      <input
        type="number"
        value={altura}
        onChange={(e) => setAltura(e.target.value)}
        placeholder="Altura en cm"
        className="border px-3 py-2 rounded w-full max-w-xs"
      />
      <button
        onClick={manejarVoto}
        disabled={loading}
        className="bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50"
      >
        {loading ? 'Enviando...' : 'Votar'}
      </button>
      {mensaje && <p className="text-sm text-gray-700">{mensaje}</p>}
    </div>
  )
}
